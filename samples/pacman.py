from copy import deepcopy
import sys
from asciimatics.effects import Sprite
from asciimatics.exceptions import ResizeScreenError
from asciimatics.paths import Path
from asciimatics.renderers import StaticRenderer
from asciimatics.scene import Scene
from asciimatics.screen import Screen
from asciimatics.effects import Print

dot = """${7,2,7}####
${7,2,7}####
"""

pac_man = """
        {0}##########
    {0}##################
  {0}############${{7,2,7}}    {0}######
  {0}############${{4,2,0}}  ${{7,2,7}}  {0}######
{0}##########################
{0}##########################
{0}##########################
{0}##########################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}############${{7,2,7}}    {0}######
  {0}############${{4,2,0}}  ${{7,2,7}}  {0}######
{0}##########################
{0}##########################
              {0}############
{0}##########################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}############${{7,2,7}}    {0}######
  {0}############${{4,2,0}}  ${{7,2,7}}  {0}######
{0}##########################
      {0}####################
              {0}############
      {0}####################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}############${{7,2,7}}    {0}######
  {0}############${{4,2,0}}  ${{7,2,7}}  {0}######
      {0}####################
          {0}################
              {0}############
          {0}################
      {0}####################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}############${{7,2,7}}    {0}######
    {0}##########${{4,2,0}}  ${{7,2,7}}  {0}######
        {0}##################
            {0}##############
              {0}############
            {0}##############
        {0}##################
    {0}####################
  {0}######################
    {0}##################
        {0}##########
"""

pac_man_right = """
        {0}##########
    {0}##################
  {0}######${{7,2,7}}    {0}############
  {0}######${{7,2,7}}  ${{4,2,0}}  {0}############
{0}##########################
{0}##########################
{0}##########################
{0}##########################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}######${{7,2,7}}    {0}############
  {0}######${{7,2,7}}  ${{4,2,0}}  {0}############
{0}##########################
{0}##########################
{0}############
{0}##########################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}######${{7,2,7}}    {0}############
  {0}######${{7,2,7}}  ${{4,2,0}}  {0}############
{0}##########################
{0}####################
{0}############
{0}####################
{0}##########################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}######${{7,2,7}}    {0}############
  {0}######${{7,2,7}}  ${{4,2,0}}  {0}############
{0}####################
{0}################
{0}############
{0}################
{0}#####################
  {0}######################
  {0}######################
    {0}##################
        {0}##########
""", """
        {0}##########
    {0}##################
  {0}######${{7,2,7}}    {0}############
  {0}######${{7,2,7}}  ${{4,2,0}}  {0}##########
{0}##################
{0}##############
{0}############
{0}##############
{0}##################
  {0}####################
  {0}######################
    {0}##################
        {0}##########
"""

ghost = """
          {0}########
      {0}################
    {0}####################
  {0}##${{7,2,7}}....{0}########${{7,2,7}}....{0}######
  ${{7,2,7}}........{0}####${{7,2,7}}........{0}####
  ${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}####
{0}##${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}######
{0}####${{7,2,7}}....{0}########${{7,2,7}}....{0}########
{0}############################
{0}############################
{0}##########################
{0}####${{7,2,0}}  {0}########${{7,2,0}}  {0}########
{0}##${{7,2,0}}      {0}####${{7,2,0}}      {0}####
""", """
          {0}########
      {0}################
    {0}####################
  {0}##${{7,2,7}}....{0}########${{7,2,7}}....{0}######
  ${{7,2,7}}........{0}####${{7,2,7}}........{0}####
  ${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}####
{0}##${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}######
{0}####${{7,2,7}}....{0}########${{7,2,7}}....{0}########
{0}############################
{0}############################
{0}############################
{0}######${{7,2,0}}  {0}########${{7,2,0}}  {0}########
{0}####${{7,2,0}}      {0}####${{7,2,0}}      {0}####
""", """
          {0}########
      {0}################
    {0}####################
  {0}##${{7,2,7}}....{0}########${{7,2,7}}....{0}######
  ${{7,2,7}}........{0}####${{7,2,7}}........{0}####
  ${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}####
{0}##${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}######
{0}####${{7,2,7}}....{0}########${{7,2,7}}....{0}########
{0}############################
{0}############################
{0}############################
{0}########${{7,2,0}}  {0}########${{7,2,0}}  {0}########
  {0}####${{7,2,0}}      {0}####${{7,2,0}}      {0}####
""", """
          {0}########
      {0}################
    {0}####################
  {0}##${{7,2,7}}....{0}########${{7,2,7}}....{0}######
  ${{7,2,7}}........{0}####${{7,2,7}}........{0}####
  ${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}####
{0}##${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}######
{0}####${{7,2,7}}....{0}########${{7,2,7}}....{0}########
{0}############################
{0}############################
{0}############################
  {0}########${{7,2,0}}  {0}########${{7,2,0}}  {0}######
    {0}####${{7,2,0}}      {0}####${{7,2,0}}      {0}####
""", """
          {0}########
      {0}################
    {0}####################
  {0}##${{7,2,7}}....{0}########${{7,2,7}}....{0}######
  ${{7,2,7}}........{0}####${{7,2,7}}........{0}####
  ${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}####
{0}##${{4,2,4}}    ${{7,2,7}}....{0}####${{4,2,4}}    ${{7,2,7}}....{0}######
{0}####${{7,2,7}}....{0}########${{7,2,7}}....{0}########
{0}############################
{0}############################
{0}############################
{0}##${{7,2,0}}  {0}########${{7,2,0}}  {0}########${{7,2,0}}  {0}####
      {0}####${{7,2,0}}      {0}####${{7,2,0}}      {0}##
"""

scared_ghost = """
          ${4,2,4}########
      ${4,2,4}################
    ${4,2,4}####################
  ${4,2,4}########################
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
${4,2,4}############################
${4,2,4}############################
${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####
${4,2,4}##${7,2,7}  ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}  ${4,2,4}##
${4,2,4}############################
${4,2,4}####${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}##
${4,2,4}##${7,2,0}      ${4,2,4}####${7,2,0}      ${4,2,4}####
""", """
          ${4,2,4}########
      ${4,2,4}################
    ${4,2,4}####################
  ${4,2,4}########################
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
${4,2,4}############################
${4,2,4}############################
${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####
${4,2,4}##${7,2,7}  ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}  ${4,2,4}##
${4,2,4}############################
${4,2,4}##${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}####
      ${4,2,4}####${7,2,0}      ${4,2,4}####${7,2,0}      ${4,2,4}##
""", """
          ${4,2,4}########
      ${4,2,4}################
    ${4,2,4}####################
  ${4,2,4}########################
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
${4,2,4}############################
${4,2,4}############################
${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####
${4,2,4}##${7,2,7}  ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}  ${4,2,4}##
${4,2,4}############################
  ${4,2,4}########${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}######
    ${4,2,4}####${7,2,0}      ${4,2,4}####${7,2,0}      ${4,2,4}####
""", """
          ${4,2,4}########
      ${4,2,4}################
    ${4,2,4}####################
  ${4,2,4}########################
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
${4,2,4}############################
${4,2,4}############################
${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####
${4,2,4}##${7,2,7}  ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}  ${4,2,4}##
${4,2,4}############################
${4,2,4}########${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}########
  ${4,2,4}####${7,2,0}      ${4,2,4}####${7,2,0}      ${4,2,4}####
""", """
          ${4,2,4}########
      ${4,2,4}################
    ${4,2,4}####################
  ${4,2,4}########################
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
  ${4,2,4}####${7,2,7}    ${4,2,4}########${7,2,7}    ${4,2,4}####
${4,2,4}############################
${4,2,4}############################
${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####
${4,2,4}##${7,2,7}  ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}    ${4,2,4}####${7,2,7}  ${4,2,4}##
${4,2,4}############################
${4,2,4}######${7,2,0}  ${4,2,4}########${7,2,0}  ${4,2,4}########
${4,2,4}####${7,2,0}      ${4,2,4}####${7,2,0}      ${4,2,4}####
"""

# Globals used for pacman animation
direction = 1
value = 0


def cycle():
    global value, direction
    value += direction
    if value <= 0 or value >= 4:
        direction = -direction
    return value


class PacMan(Sprite):
    def __init__(self, screen, path, start_frame=0, stop_frame=0):
        images = []
        images_right = []
        colour = Screen.COLOUR_YELLOW if screen.colours <= 16 else 11
        for image in pac_man:
            images.append(image.format("${%d,2,%d}" % (colour, colour)))
        for image in pac_man_right:
            images_right.append(image.format("${%d,2,%d}" % (colour, colour)))
        super(PacMan, self).__init__(
            screen,
            renderer_dict={
                "default": StaticRenderer(images=images, animation=cycle),
                "left": StaticRenderer(images=images, animation=cycle),
                "right": StaticRenderer(images=images_right, animation=cycle),
            },
            path=path,
            start_frame=start_frame,
            stop_frame=stop_frame)


class Ghost(Sprite):
    def __init__(self, screen, path, colour=1, start_frame=0, stop_frame=0):
        images = []
        for image in ghost:
            images.append(image.format("${%d,2,%d}" % (colour, colour)))
        super(Ghost, self).__init__(
            screen,
            renderer_dict={
                "default": StaticRenderer(images=images),
            },
            colour=Screen.COLOUR_RED,
            path=path,
            start_frame=start_frame,
            stop_frame=stop_frame)


class ScaredGhost(Sprite):
    def __init__(self, screen, path, start_frame=0, stop_frame=0):
        super(ScaredGhost, self).__init__(
            screen,
            renderer_dict={
                "default": StaticRenderer(images=scared_ghost),
            },
            colour=Screen.COLOUR_BLUE,
            path=path,
            start_frame=start_frame,
            stop_frame=stop_frame)


def demo(screen):
    scenes = []
    centre = (screen.width // 2, screen.height // 2)

    # Scene 1 - run away, eating dots
    path = Path()
    path.jump_to(screen.width + 16, centre[1])
    path.move_straight_to(-16, centre[1], screen.width // 2)
    path.wait(100)

    if screen.colours <= 16:
        inky = 6
        pinky = 5
        blinky = 1
        clyde = 2
    else:
        inky = 14
        pinky = 201
        blinky = 9
        clyde = 208

    effects = [
        PacMan(screen, path),
        Ghost(screen, deepcopy(path), inky, start_frame=50),
        Ghost(screen, deepcopy(path), pinky, start_frame=80),
        Ghost(screen, deepcopy(path), blinky, start_frame=110),
        Ghost(screen, deepcopy(path), clyde, start_frame=140),
        Print(screen,
              StaticRenderer(images=["A tribute to the classic 80's "
                                     "video game by Namco."]),
              screen.height - 1)
    ]

    for x in range(5, screen.width, 16):
        effects.insert(0,
                       Print(screen,
                             StaticRenderer(images=[dot]),
                             screen.height // 2,
                             x=x,
                             speed=1,
                             stop_frame=4))

    scenes.append(Scene(effects, 160 + screen.width))

    # Scene 2 - Chase ghosts after a power pill
    path = Path()
    path.jump_to(-16, centre[1])
    path.move_straight_to(screen.width + 16, centre[1], screen.width // 2)
    path.wait(100)
    effects = [
        ScaredGhost(screen, deepcopy(path)),
        ScaredGhost(screen, deepcopy(path), start_frame=30),
        ScaredGhost(screen, deepcopy(path), start_frame=60),
        ScaredGhost(screen, deepcopy(path), start_frame=90),
        PacMan(screen, path, start_frame=120),
    ]
    scenes.append(Scene(effects, 160 + screen.width))


    screen.play(scenes, stop_on_resize=True)


if __name__ == "__main__":
    while True:
        try:
            Screen.wrapper(demo)
            sys.exit(0)
        except ResizeScreenError:
            pass
